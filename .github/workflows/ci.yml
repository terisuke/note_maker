name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  GO_VERSION: "1.21"
  PROJECT_ID: yolov8environment

jobs:
  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Run OWASP dependency check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: "Note Maker"
          path: "."
          format: "HTML"
          out: "reports"

  test:
    needs: security
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
          cache-dependency-path: go.sum

      - name: Install dependencies
        run: go mod tidy

      - name: Run tests
        run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.txt
          fail_ci_if_error: true

      - name: Run linter
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest
          args: --timeout=5m

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
          cache-dependency-path: go.sum

      - name: Build
        run: |
          GOOS=linux GOARCH=amd64 go build -v -o note-maker ./cmd/server

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: note-maker
          path: note-maker

  deploy-cloud-functions:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          install_components: "gke-gcloud-auth-plugin"

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Deploy Cloud Functions
        run: |
          cd functions
          gcloud functions deploy note-maker \
            --gen2 \
            --runtime=go121 \
            --region=asia-northeast1 \
            --source=. \
            --entry-point=GenerateArticle \
            --trigger-http \
            --allow-unauthenticated \
            --set-env-vars GEMINI_API_KEY="${{ secrets.GEMINI_API_KEY }}"

  deploy-staging:
    needs: [build, deploy-cloud-functions]
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: note-maker

      - name: Setup Firebase CLI
        run: npm install -g firebase-tools

      - name: Deploy to Firebase (Staging)
        run: |
          firebase deploy --only hosting:staging --token "${{ secrets.FIREBASE_TOKEN }}"
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

  deploy-production:
    needs: [build, deploy-cloud-functions]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: note-maker

      - name: Setup Firebase CLI
        run: npm install -g firebase-tools

      - name: Deploy to Firebase (Production)
        run: |
          firebase deploy --only hosting:production --token "${{ secrets.FIREBASE_TOKEN }}"
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
